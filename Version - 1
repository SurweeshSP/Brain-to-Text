{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":106809,"databundleVersionId":13056355,"sourceType":"competition"}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-10-04T06:07:48.933855Z","iopub.execute_input":"2025-10-04T06:07:48.934134Z","iopub.status.idle":"2025-10-04T06:07:51.995107Z","shell.execute_reply.started":"2025-10-04T06:07:48.934104Z","shell.execute_reply":"2025-10-04T06:07:51.993562Z"},"scrolled":true},"outputs":[{"name":"stdout","text":"/kaggle/input/brain-to-text-25/data_link.txt\n/kaggle/input/brain-to-text-25/t15_pretrained_rnn_baseline/t15_pretrained_rnn_baseline/training_log\n/kaggle/input/brain-to-text-25/t15_pretrained_rnn_baseline/t15_pretrained_rnn_baseline/checkpoint/args.yaml\n/kaggle/input/brain-to-text-25/t15_pretrained_rnn_baseline/t15_pretrained_rnn_baseline/checkpoint/best_checkpoint\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.14/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.14/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.14/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.11/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.19/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.19/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.19/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.08/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.08/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.08/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.08/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.08/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.08/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.06/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.06/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.06/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.21/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.21/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.21/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.10/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.10/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.10/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.13/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.13/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.13/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.26/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.26/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.26/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.08/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.08/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.08/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.19/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.19/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.19/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.28/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.28/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.07.28/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.04/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.04/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.04/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.27/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.27/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.27/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.04.13/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.04.13/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.04.13/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.15/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.15/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.15/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.13/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.13/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.13/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.22/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.22/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.22/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.15/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.15/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.15/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.25/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.25/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.25/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.04.28/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.17/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.17/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.17/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.17/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.17/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.17/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.03/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.03/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.03/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.01/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.01/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.01/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.05.10/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.05.10/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.05.10/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.24/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.24/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.24/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.03/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.20/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.20/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.10.20/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.29/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.29/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.29/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.29/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.29/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.12.29/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.12/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.12/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.12/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.30/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.30/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.30/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.18/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.18/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.18/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.01/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.01/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.01/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.16/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.16/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.03.16/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.02.25/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.02.25/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.02.25/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.17/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.17/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.03.17/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.10/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.10/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2025.01.10/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.04.25/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.06.14/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.06.14/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2024.06.14/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.03/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.03/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.09.03/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.03/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.03/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.11.03/data_val.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.20/data_test.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.20/data_train.hdf5\n/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.20/data_val.hdf5\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import h5py\nimport numpy as np\n\n# Load the dataset file\nfile_path = '/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/t15.2023.08.11/data_train.hdf5'\n\nwith h5py.File(file_path, 'r') as f:\n    # Select a trial (you can loop over all trials later)\n    trial = f['trial_0000']\n    \n    # Extract arrays\n    X = trial['input_features'][:]        # shape (T, 512)\n    y_phoneme = trial['seq_class_ids'][:] # shape (P,)\n    y_text = trial['transcription'][:]    # shape (W,)\n\n# Print summaries\nprint(\"Input features shape:\", X.shape)\nprint(\"Phoneme labels shape:\", y_phoneme.shape)\nprint(\"Transcription shape:\", y_text.shape)\n\n# Check a few values\nprint(\"\\nSample input feature row:\", X[0][:])  # first 10 feature values\nprint(\"Sample phoneme IDs:\", y_phoneme[:10])\nprint(\"Sample transcription IDs:\", y_text[:10])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-05T02:34:46.704579Z","iopub.execute_input":"2025-10-05T02:34:46.704779Z","iopub.status.idle":"2025-10-05T02:34:47.073556Z","shell.execute_reply.started":"2025-10-05T02:34:46.704761Z","shell.execute_reply":"2025-10-05T02:34:47.072467Z"}},"outputs":[{"name":"stdout","text":"Input features shape: (321, 512)\nPhoneme labels shape: (500,)\nTranscription shape: (500,)\n\nSample input feature row: [ 2.3076649  -0.78699756 -0.64687246 -0.5465877   0.25500455 -0.37754795\n -0.31888878 -0.43742913 -0.552158   -0.6198629  -0.2722918   1.0336585\n  0.27755055 -0.666718   -0.6310771  -0.78702307 -0.59295505  0.8399486\n  0.85698867  0.34778863 -0.7790861  -0.843797    0.7688951  -0.77096075\n -0.437959    2.4420617   0.29788262 -0.60283345 -0.4174294  -0.5666092\n -0.7893149   0.16854596 -0.54237986 -0.3172244  -0.7257092  -0.6197359\n  0.15344943 -0.38841027 -0.76966536 -0.27819777  0.53903705 -0.6611451\n -0.75468504 -0.6057648  -0.73880273 -0.4290835  -0.94724435  0.6137742\n -0.5463916  -0.41273063 -0.8792733   0.97371936  1.0565114  -0.5758789\n  2.4920397  -0.42387414 -0.22300059 -0.4641142  -0.5492305  -0.46833596\n  3.2247906  -0.11923911  1.5838451  -0.09712851 -0.7942411  -0.5100695\n -0.68580496 -0.5852925  -0.603436    0.50690377 -0.30034852  4.1031313\n -0.6948983  -0.5562878   1.5018272  -0.35887727 -0.5901224  -0.63912416\n -0.52937365 -0.16325521  0.74647266 -0.13449022 -0.15371595 -0.8086595\n -0.46007815 -0.39804113  0.63136655 -0.5603162   0.66564244  1.026342\n  1.0497364  -0.5676086   1.9144232  -0.16984162 -0.69077396 -0.2223696\n -0.45084962  0.31810564 -1.2886951   2.8417828   1.9198556  -0.65563273\n -0.8808405  -0.5839129  -0.21928343 -0.93472826 -1.1244689   0.1570389\n  0.25946248 -0.7659722  -0.6609633  -0.40443888 -0.28115866 -0.6968133\n -1.0455226  -0.9092157   0.80293995  0.6022096  -1.072319    0.4672438\n  3.2495701   4.322763   -0.4374437   0.20416275  2.4733093  -0.4016732\n -0.28518087 -0.3647703  -1.0060111  -1.1173934   0.7696486  -0.9979249\n -0.4254152   2.2359376  -0.32826716 -0.11233114 -0.73417306 -0.87693644\n -0.13625346 -0.82149994  1.1091884  -0.516467   -0.6061519  -0.81583285\n -0.6630439   1.6290879  -0.91519433 -0.9548456  -0.7729239   0.7957438\n -1.1268758  -0.8204315  -0.95808965 -0.5102313  -0.61390674  0.22336504\n -0.6789398  -0.57929665 -0.87530965 -0.8403082  -1.3545448  -0.8724641\n -0.3820907   1.8482778   0.28298536 -0.7547832  -0.5477684  -0.8110415\n -0.07918064 -0.77779204 -0.8993781   0.05489132 -0.10873149 -0.5942442\n -0.6294594  -0.6559725  -0.6489255  -0.9875131   1.0031364  -0.8591877\n  0.6224035  -0.07454145  0.88708365 -0.14930865 -0.49931344 -0.5340475\n  4.0510144  -0.9193805   0.5350056  -0.61930287 -0.8403575  -1.0220783\n -0.4562829   0.6074758  -0.46520656 -0.2654165  -0.5293411   0.77331173\n -0.5509832  -0.6326867  -0.2547191  -0.66311663  0.9357117   0.5606107\n -0.5834567  -0.63425255  0.62541795 -0.62835765 -0.61680925 -0.6744631\n  0.4358965  -0.8852247  -0.9182702   0.31465283 -1.0237244  -1.0429336\n -1.0892158  -0.89635646 -0.93282217 -0.7034446  -0.73058265 -0.17608659\n -0.9861013  -0.571891    1.1369307   0.73664635  0.74893177  0.58920074\n -0.6642993   2.009673    1.6065629  -0.71492577 -0.5425989  -0.8438985\n -0.6304679   1.6823055   1.3655643  -0.653197   -0.47072423  1.2801076\n -0.6915899  -0.78682315 -0.4016736   0.07206184  0.48307127  2.4204607\n -0.20544502 -0.53256726 -0.56156164 -0.75127965 -1.0972689  -0.8764349\n -0.48201936  0.83810395 -0.3289254  -0.3731014   0.42762992 -0.9927089\n -0.98290706 -1.3720226  -0.7368366  -0.502273   -0.38284197 -0.43514246\n -0.45898786 -0.81552994 -1.037468    1.5269672   0.24386652 -0.4810984\n -0.73050463 -1.0578549  -1.0728137   0.24289073  0.42365366  1.1153152\n -0.96126634 -0.76943684  1.0387434  -0.61462307 -0.493274   -0.00854964\n -0.49241474 -0.70684296 -0.4668919  -0.95333564 -0.9210525   1.2389431\n -0.4261885  -0.535416   -1.151569   -0.14319889  0.2239445  -0.42169595\n -0.4532525  -0.6107523  -0.43080604 -0.7506939  -0.77451265 -0.5004188\n -0.90239763 -0.24248217 -0.71451616  0.25715673 -0.37129506 -0.9613883\n -1.056714   -0.51006186  0.09554572 -0.9755061  -0.23866284 -0.87683046\n -0.78057927 -0.7295193  -0.8654158  -0.6977953   2.3287816  -1.1569148\n  1.6476707  -1.5092787  -0.21502116 -0.48730668 -0.7174389  -0.6698602\n -0.6829336  -0.23655677  0.08789751  1.719456   -1.2945591  -1.2484773\n  0.3577217  -0.79188746 -0.63958734 -0.9469683  -0.6300207  -0.50196713\n -0.55603164 -0.7137818   0.05313407 -1.0117475  -1.3233516  -1.3446937\n  0.05052676 -1.273296   -0.02342449  0.04944937  0.11576715 -0.34752378\n -0.10363815 -0.78256994 -1.2645344  -0.88083106  0.10641053  0.6660232\n -1.4196591   1.1814      0.6185777  -0.81786364 -0.89482    -0.3712795\n -1.3915757  -1.0902308  -1.3552573  -0.35811502  0.20781317 -0.7562471\n -1.0844029  -0.344378   -0.33516216 -0.5914646  -1.1701252  -0.8121005\n  0.46121246  0.12646843 -1.2247303   0.1996745   1.9819672   2.9660134\n -0.91374826  0.11389273  2.9381824  -0.96545607 -1.190995    0.2114223\n -1.2452503  -1.6840367   0.34562877 -0.6625789  -1.3360639  -0.5963416\n -0.94754106 -1.6605002  -1.6370404  -1.1194495   0.19468893 -0.99948835\n  0.21448335 -0.87200075 -0.78745717 -1.0645713  -0.77728426  0.93718135\n -1.174949   -1.275437   -1.1333019  -0.43346545 -1.0911902  -0.56418794\n -0.8720056  -1.1467232  -1.0167987   0.02811413 -1.2235795  -0.78109264\n -0.629308   -1.1361895  -1.4013705  -1.0130705  -0.438414    1.0221207\n -0.28523642 -0.6728531  -0.9068811  -0.71865153 -0.80234414 -0.889773\n -0.6783438  -0.36688447 -0.47375116 -0.22822705 -0.9266897  -0.918847\n  0.9255994  -0.99864227  0.6519056  -0.84216774 -0.33204818  0.84402657\n  1.4956689   0.53440595 -0.90524226 -0.6636251   2.5546823  -1.2869236\n -0.17336662 -0.5226231  -0.8251883  -1.0195179  -0.47750133  1.3557949\n -0.5933006   0.9620423   0.1947498   0.9728769  -0.24200271 -0.4706283\n -0.23185177 -0.8421882   1.2021793  -0.3844243  -0.78168905 -0.72828543\n  0.6498486  -0.70523095 -0.5805256  -0.26650724 -0.01899726 -0.2409702\n -1.0387025   0.642037   -0.8106473  -0.8860233  -0.80346626 -1.5534935\n -0.604658    0.18168718 -1.0749094   0.14102179 -0.92183375 -0.48595896\n  1.7163332   1.1171715  -0.09714307  0.8041192  -0.21881002  2.0348198\n  0.981629   -0.00735747 -0.66939825 -1.0059066   0.0183885   1.836036\n  1.0928419  -0.57912314 -0.02769383  0.05764658 -1.0663698  -0.8708504\n -0.20133011  0.24667199 -0.16636291  2.6357744  -0.33262774  0.0069312\n -0.7148367  -1.0180258  -0.88465786 -0.96628463 -0.7634382   0.57367045\n -0.7091646  -0.11018186]\nSample phoneme IDs: [ 7 28 17 24 40 17 31 40 20 21]\nSample transcription IDs: [ 66 114 105 110 103  32 105 116  32  99]\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import h5py\nimport numpy as np\nimport os\nfrom glob import glob\nfrom typing import Dict, Any, List, Optional\n\n# Base directory for your downloaded data\nBASE_PATH = '/kaggle/input/brain-to-text-25/t15_copyTask_neuralData/hdf5_data_final/'\n\ndef load_all_competition_data(base_dir: str = BASE_PATH) -> Dict[str, List[Any]]:\n    \"\"\"\n    Loads all trials from all HDF5 files across all sessions and partitions.\n\n    Args:\n        base_dir: The root directory containing the t15.YYYY.MM.DD folders.\n\n    Returns:\n        A dictionary where keys are data fields (e.g., 'neural_features', 'seq_class_ids')\n        and values are lists containing data from all trials.\n    \"\"\"\n    # Initialize a dictionary to store all data fields\n    all_data = {\n        'neural_features': [],\n        'n_time_steps': [],\n        'seq_class_ids': [],  # Phoneme labels (present in train/val)\n        'transcriptions': [], # ASCII sentence (present in train/val)\n        'sentence_label': [], # Raw text (present in train/val)\n        'session': [],\n        'block_num': [],\n        'trial_num': [],\n        'partition': []       # New field to track train/val/test status\n    }\n\n    # Use glob to find all hdf5 files across all date subdirectories\n    file_paths = glob(os.path.join(base_dir, 't15.*', 'data_*.hdf5'))\n\n    print(f\"Found {len(file_paths)} HDF5 files to process...\")\n\n    for file_path in file_paths:\n        try:\n            # Determine the partition (train, val, or test) from the filename\n            partition = os.path.basename(file_path).split('_')[1].split('.')[0]\n            \n            with h5py.File(file_path, 'r') as f:\n                # Iterate through all trial keys in the file\n                for key in f.keys():\n                    if key.startswith('trial_'):\n                        g = f[key]\n                        \n                        # Extract the data\n                        all_data['neural_features'].append(g['input_features'][:])\n                        all_data['n_time_steps'].append(g.attrs['n_time_steps'])\n                        \n                        # Labels are only available in train/val; handle gracefully for 'test'\n                        all_data['seq_class_ids'].append(g['seq_class_ids'][:] if 'seq_class_ids' in g else None)\n                        all_data['transcriptions'].append(g['transcription'][:] if 'transcription' in g else None)\n                        all_data['sentence_label'].append(g.attrs['sentence_label'][:] if 'sentence_label' in g.attrs else None)\n                        \n                        # Metadata\n                        all_data['session'].append(g.attrs['session'])\n                        all_data['block_num'].append(g.attrs['block_num'])\n                        all_data['trial_num'].append(g.attrs['trial_num'])\n                        all_data['partition'].append(partition)\n                        \n        except Exception as e:\n            print(f\"Error processing file {file_path}: {e}\")\n            continue\n\n    print(f\"\\nSuccessfully loaded {len(all_data['neural_features'])} total trials.\")\n    return all_data\n\n# # Example Usage (Uncomment to run)\ndata = load_all_competition_data()\nprint(\"\\nFirst trial neural features shape:\", data['neural_features'][0].shape)\nprint(\"Total training trials:\", sum(1 for p in data['partition'] if p == 'train'))\nprint(\"Total validation trials:\", sum(1 for p in data['partition'] if p == 'val'))\nprint(\"Total test trials:\", sum(1 for p in data['partition'] if p == 'test'))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-10-05T02:43:57.351273Z","iopub.execute_input":"2025-10-05T02:43:57.351613Z","iopub.status.idle":"2025-10-05T02:48:25.632638Z","shell.execute_reply.started":"2025-10-05T02:43:57.351586Z","shell.execute_reply":"2025-10-05T02:48:25.631134Z"}},"outputs":[{"name":"stdout","text":"Found 127 HDF5 files to process...\n\nSuccessfully loaded 10948 total trials.\n\nFirst trial neural features shape: (619, 512)\nTotal training trials: 8072\nTotal validation trials: 1426\nTotal test trials: 1450\n","output_type":"stream"}],"execution_count":2}]}